makeVector <- function(x = numeric()){
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
save.image("D:\\Fang\\Coursera\\DataSci\\R\\w3\\ramonprogrammingRw3")
q()
activity_data<-read.csv(".\\activity.csv")
installed.packages("rmarkdown")
install.packages("rmarkdown")
rm(list=ls())
setwd(Desktop/Cousera/repropeer1)
setwd("C:\Windows\system32\config\systemprofile\Desktop\Coursera\repropeer1")
setwd('C:\Windows\system32\config\systemprofile\Desktop\Coursera\repropeer1)
setwd('C:\Windows\system32\config\systemprofile\Desktop\Coursera\repropeer1')
setwd('C:\\Windows\\system32\\config\\systemprofile\\Desktop\\Coursera\\repropeer1')
rm(list=ls())
activity_raw <- read.csv("activity.csv", stringsAsFactors=FALSE)
activity_raw <- read.csv("activity.csv", stringsAsFactors=FALSE)
library(knitr)
opts_chunk$set(echo = TRUE, results = 'hold')
library(data.table)
library(ggplot2) # we shall use ggplot2 for plotting figures
install.packages("ggplot2")
install.packages(data.table)
install.packages("knitr")
install.packages("knitr")
install.packages("data.table")
library(knitr)
opts_chunk$set(echo = TRUE, results = 'hold')
library(data.table)
library(ggplot2)
install.packages("lattice")
library(lattice)
library(lattice)
opts_chunk$set(echo=TRUE,results="show",cache=TRUE)
dfMaster <- read.table("activity.csv",
header=TRUE,
sep=",",
stringsAsFactors = FALSE,
colClasses = c("numeric","Date","numeric")
)
df <- dfMaster
TotalStepsByDay <- aggregate(df$steps,list(date=df$date),sum,na.rm=TRUE)
xAxisBreakdown = seq(from=0,to=25000,by=2000)
hist(TotalStepsByDay$x,
breaks = xAxisBreakdown,
main="Frequency of Total Steps per Day",
col="blue",
xlab="Steps",
ylab="Days",
xaxt="n")
axis(side=1,at=xAxisBreakdown,labels=xAxisBreakdown)
stepMean <- mean(TotalStepsByDay$x,na.rm=T)
stepMedian <- median(TotalStepsByDay$x,na.rm=T)
print(paste("The Mean number of steps per day is",round(stepMean,1)))
print(paste("The Median number of steps per day is",round(stepMedian,1)))
intHours <- df$interval %/% 100
intHours <- ifelse(intHours < 10,paste("0",intHours,sep=""),intHours)
intMinutes <- df$interval %% 100
intMinutes <- ifelse(intMinutes < 10,paste("0",intMinutes,sep=""),intMinutes)
intTime <- paste(intHours,":",intMinutes,sep="")
intTime <- strptime(intTime,format="%H:%M")
df <- cbind(df,intTime)
SPI <- aggregate(df$steps,list(intTime=df$intTime),mean,na.rm=TRUE)
plot(SPI$intTime,SPI$x,
type = "l",
main = "Average Steps per Interval",
xlab = "Interval",
ylab = "Average Steps")
MaxStepAvg <- max(SPI$x)
IntervalWithMaxStepAvg <- SPI$intTime[SPI$x == MaxStepAvg]
countNAs <- sum(is.na(df$steps))
names(SPI)[names(SPI)=="x"] <- "avgIntervalSteps"
dfWithAvg <- merge(x=df,y=SPI,by="intTime",all.x=TRUE)
dfWithAvg <- dfWithAvg[order(dfWithAvg$date,dfWithAvg$intTime),]
dfWithAvg$imputedSteps <- ifelse(is.na(dfWithAvg$steps),
dfWithAvg$avgIntervalSteps,
dfWithAvg$steps)
TotalStepsByDayImputed <- aggregate(dfWithAvg$imputedSteps,list(date=dfWithAvg$date),sum,na.rm=TRUE)
xAxisBreakdown = seq(from=0,to=25000,by=2000)
hist(TotalStepsByDayImputed$x,
breaks = xAxisBreakdown,
main="Frequency of Total Steps (imputed) per Day",
col="blue",
xlab="Steps",
ylab="Days",
xaxt="n")
axis(side=1,at=xAxisBreakdown,labels=xAxisBreakdown)
stepMeanImputed <- mean(TotalStepsByDayImputed$x,na.rm=T)
stepMedianImputed <- median(TotalStepsByDayImputed$x,na.rm=T)
print(paste("The Mean number of imputed steps per day is",round(stepMeanImputed,1)))
print(paste("The Median number of imputed steps per day is",round(stepMedianImputed,1)))
dfWithAvg$weekday <- weekdays(dfWithAvg$date)
dfWithAvg$weekendFlag <- ifelse(dfWithAvg$weekday=="Saturday" | dfWithAvg$weekday=="Sunday","Weekend","Weekday")
SPI2 <- aggregate(dfWithAvg$imputedSteps,list(intTime=dfWithAvg$intTime,weekendFlag=dfWithAvg$weekendFlag),mean,na.rm=TRUE)
xn <- seq(min(dfWithAvg$intTime),max(dfWithAvg$intTime),by="4 hour")
xyplot(x~intTime|weekendFlag,
data=SPI2,
type="l",
layout=c(1,2),
xlab = "Time Interval (24-hour clock)",
ylab = "Average Steps",
main = "Average (imputed) Steps per Day - Weekend vs Weekday",
scales=list(
x=list(
at=xn,
labels=format(xn,"%H:%M")
)
)
)
install.packages("scales")
install.packages("scales")
install.packages("Hmisc")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: pressure
plot(pressure)
# Chunk 3
library(ggplot2)
library(scales)
library(Hmisc)
# Chunk 4
activity_raw <- read.csv("activity.csv", stringsAsFactors=FALSE)
dfMaster <- read.table("activity.csv",
+                        header=TRUE,
+                        sep=",",
+                        stringsAsFactors = FALSE,
+                        colClasses = c("numeric","Date","numeric")
+ )
> df <- dfMaster
> TotalStepsByDay <- aggregate(df$steps,list(date=df$date),sum,na.rm=TRUE)
> xAxisBreakdown = seq(from=0,to=25000,by=2000)
> hist(TotalStepsByDay$x,
+      breaks = xAxisBreakdown,
+      main="Frequency of Total Steps per Day",
+      col="blue",
+      xlab="Steps",
+      ylab="Days",
+      xaxt="n")
> axis(side=1,at=xAxisBreakdown,labels=xAxisBreakdown)
> stepMean <- mean(TotalStepsByDay$x,na.rm=T)
> stepMedian <- median(TotalStepsByDay$x,na.rm=T)
> print(paste("The Mean number of steps per day is",round(stepMean,1)))
[1] "The Mean number of steps per day is 9354.2"
> print(paste("The Median number of steps per day is",round(stepMedian,1)))
[1] "The Median number of steps per day is 10395"
> intHours <- df$interval %/% 100
> intHours <- ifelse(intHours < 10,paste("0",intHours,sep=""),intHours)
> intMinutes <- df$interval %% 100
> intMinutes <- ifelse(intMinutes < 10,paste("0",intMinutes,sep=""),intMinutes)
> intTime <- paste(intHours,":",intMinutes,sep="")
> intTime <- strptime(intTime,format="%H:%M")
> df <- cbind(df,intTime)
> SPI <- aggregate(df$steps,list(intTime=df$intTime),mean,na.rm=TRUE)
> plot(SPI$intTime,SPI$x,
+      type = "l",
+      main = "Average Steps per Interval",
+      xlab = "Interval",
+      ylab = "Average Steps")
> MaxStepAvg <- max(SPI$x)
> IntervalWithMaxStepAvg <- SPI$intTime[SPI$x == MaxStepAvg]
> countNAs <- sum(is.na(df$steps))
> names(SPI)[names(SPI)=="x"] <- "avgIntervalSteps"
> dfWithAvg <- merge(x=df,y=SPI,by="intTime",all.x=TRUE)
> dfWithAvg <- dfWithAvg[order(dfWithAvg$date,dfWithAvg$intTime),]
>
> dfWithAvg$imputedSteps <- ifelse(is.na(dfWithAvg$steps),
+                                  dfWithAvg$avgIntervalSteps,
+                                  dfWithAvg$steps)
> TotalStepsByDayImputed <- aggregate(dfWithAvg$imputedSteps,list(date=dfWithAvg$date),sum,na.rm=TRUE)
> xAxisBreakdown = seq(from=0,to=25000,by=2000)
> hist(TotalStepsByDayImputed$x,
+      breaks = xAxisBreakdown,
+      main="Frequency of Total Steps (imputed) per Day",
+      col="blue",
+      xlab="Steps",
+      ylab="Days",
+      xaxt="n")
> axis(side=1,at=xAxisBreakdown,labels=xAxisBreakdown)
> stepMeanImputed <- mean(TotalStepsByDayImputed$x,na.rm=T)
> stepMedianImputed <- median(TotalStepsByDayImputed$x,na.rm=T)
> print(paste("The Mean number of imputed steps per day is",round(stepMeanImputed,1)))
[1] "The Mean number of imputed steps per day is 10766.2"
> print(paste("The Median number of imputed steps per day is",round(stepMedianImputed,1)))
[1] "The Median number of imputed steps per day is 10766.2"
> dfWithAvg$weekday <- weekdays(dfWithAvg$date)
> dfWithAvg$weekendFlag <- ifelse(dfWithAvg$weekday=="Saturday" | dfWithAvg$weekday=="Sunday","Weekend","Weekday")
>
> SPI2 <- aggregate(dfWithAvg$imputedSteps,list(intTime=dfWithAvg$intTime,weekendFlag=dfWithAvg$weekendFlag),mean,na.rm=TRUE)
>
> xn <- seq(min(dfWithAvg$intTime),max(dfWithAvg$intTime),by="4 hour")
>
> xyplot(x~intTime|weekendFlag,
+        data=SPI2,
+        type="l",
+        layout=c(1,2),
+        xlab = "Time Interval (24-hour clock)",
+        ylab = "Average Steps",
+        main = "Average (imputed) Steps per Day - Weekend vs Weekday",
+        scales=list(
+            x=list(
+                at=xn,
+                labels=format(xn,"%H:%M")
+            )
+        )
+ )
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: pressure
plot(pressure)
# Chunk 3
library(ggplot2)
library(scales)
library(Hmisc)
# Chunk 4
activity_raw <- read.csv("activity.csv", stringsAsFactors=FALSE)
View(activity_raw)
View(df)
View(dfMaster)
View(SPI2)
View(TotalStepsByDayImputed)
